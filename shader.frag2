uniform float time;
uniform vec3 spherePos;
uniform vec4 color[10];
uniform float size;
uniform float resolution;

float intersectRayTriangle() {
	return 0.0;
}

float intersectRaySphere(vec3 a, vec3 t) {
	return 0.0;
}


float intersectRayPlane() {
	return 0.0;
}


void main()
{

	//for(int i = 0; i < size; i++){

		//intersectRaySpere()
		
		//gl_FragColor = color[1];
	//}
    vec2 uv = gl_FragCoord.xy / resolution;
    float color = 0.5 + 0.5 * cos(time + uv.x * 10.0);
    gl_FragColor = vec4(1,.5,.5,.5);//vec4(vec3(color), 1.0);
}
